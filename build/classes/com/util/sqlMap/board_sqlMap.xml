<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
"http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="bbs">

<select id="maxNum" resultClass="int">
	select nvl(max(num),0) from board
</select>

<insert id="insertData" parameterClass="com.board.BoardForm">
	insert into board (num,subject,name,email,content,pwd,ipAddr,hitCount,created) 
	values (#num#,#subject#,#name#,#email#,#content#,#pwd#,#ipAddr#,0,sysdate)
</insert>

<!-- 반환값: resultClass
	주는값(매개변수): parameterClass -->
 
 
<!-- 반복적인 작업 처리 (insert, delete 아니어서 sql로 처리)-->
<sql id="where-list">
	<isEqual property="searchKey" compareValue="name">
		where name like '%' || #searchValue# || '%'
	</isEqual>
	<isEqual property="searchKey" compareValue="subject">
		where subject like '%' || #searchValue# || '%'
	</isEqual>
	<isEqual property="searchKey" compareValue="content">
		where content like '%' || #searchValue# || '%'
	</isEqual>
</sql> 

<sql id="field-list">
	num, name, subject, hitCount, to_char(created, 'YYYY-MM-DD') created 
</sql>

 
<!-- 데이터 개수 -->
<select id="dataCount" resultClass="Integer" parameterClass="map">
	select nvl(count(num),0) from board 
	<!-- <include refid="where-list"/> -->  <!-- 위에 있는거 호출 -->
	where $searchKey$ like '%' || #searchValue# || '%'
	<!-- 반드시 값이 있을 때에는 $, 없을 수도 있으면 # -->
</select>
 
<!-- 전체 데이터 --> 
<select id="listData" resultClass="com.board.BoardForm" parameterClass="map">
	select * from (
	select rownum rnum, data.* from (
	select <include refid="field-list"/> from board
	<!-- <include refid="where-list"/>  -->
	where $searchKey$ like '%' || #searchValue# || '%'
<![CDATA[
	order by num desc) data)
	where rnum>=#start# and rnum<=#end#
]]>
<!-- 부등호를 문자로 처리하기 위해 CDATA안에 담아주어야 한다. -->
</select>


<select id="readData" parameterClass="int" resultClass="com.board.BoardForm">
	select num,name,subject,email,pwd,content,ipAddr,hitCount,created
	from board where num=#num#
</select>


<!-- 이전글  / 다음글 구하기-->

<!-- 
[이전글, 다음글 구하는 공식]
현재 내가 보고있는 게시글의 num보다 큰 숫자들을 asc한다.
글이 총 10개고 내가 현재 게시글이 7번이라고 하면, 위쪽 글들을 asc하면 8 9 10 순서다.
이 중에서 첫번째 숫자를 뽑으면 다음글이 된다.
현재 내가 보고있는 게시글의 num보다 작은 숫자들을 desc한다.
글이 총 10개고 내가 현재 게시글이 7번이라고 하면, 아래쪽 글들을 desc하면 6 5 4 3 2 1 순서다.
이 중에서 첫번째 순서를 뽑으면 이전글이 된다.
 -->
 
<select id="preReadData" resultClass="com.board.BoardForm" parameterClass="map">
<!-- 검색을 했을 경우도 고려해야 하기 때문에 searchKey, searchValue가 있는 map으로 한다. -->
	select data.* from (
	select num,subject from board
	where ($searchKey$ like '%' || #searchValue# || '%')
	and (num>#num#) order by num asc) data
	where rownum=1	
</select>

<select id="nextReadData" resultClass="com.board.BoardForm" parameterClass="map">
<!-- 검색을 했을 경우도 고려해야 하기 때문에 searchKey, searchValue가 있는 map으로 한다. -->
	select data.* from (
	select num,subject from board
	where ($searchKey$ like '%' || #searchValue# || '%')
<![CDATA[
	and (num<#num#) order by num desc) data
	where rownum=1
]]>	
</select>


<!-- 조회수 증가 -->
<update id="hitCountUpdate" parameterClass="int">
	update board set hitCount=hitCount+1
	where num=#num#
</update>


<!-- 수정 -->
<update id="updateData" parameterClass="com.board.BoardForm">
	update board set name=#name#,subject=#subject#,email=#email#,
		content=#content#,pwd=#pwd# where num=#num#
</update>



<!-- 삭제 -->
<delete id="deleteData" parameterClass="int">
	delete board where num=#num#
</delete>























</sqlMap>